// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ezetap.proto

package com.eze.ezecli;

/**
 * Protobuf type {@code ezecli.ChangePasswordInput}
 *
 * <pre>
 **
 * ChangePasswordInput is a message representing the input for change password API. API is used to change password for the user in session.
 * </pre>
 */
public final class ChangePasswordInput extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:ezecli.ChangePasswordInput)
    ChangePasswordInputOrBuilder {
  // Use ChangePasswordInput.newBuilder() to construct.
  private ChangePasswordInput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private ChangePasswordInput(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final ChangePasswordInput defaultInstance;
  public static ChangePasswordInput getDefaultInstance() {
    return defaultInstance;
  }

  public ChangePasswordInput getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  @SuppressWarnings("unused")
private ChangePasswordInput(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000001;
            currentPassword_ = bs;
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            newPassword_ = bs;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.eze.ezecli.Ezetap.internal_static_ezecli_ChangePasswordInput_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.eze.ezecli.Ezetap.internal_static_ezecli_ChangePasswordInput_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.eze.ezecli.ChangePasswordInput.class, com.eze.ezecli.ChangePasswordInput.Builder.class);
  }

  public static com.google.protobuf.Parser<ChangePasswordInput> PARSER =
      new com.google.protobuf.AbstractParser<ChangePasswordInput>() {
    public ChangePasswordInput parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ChangePasswordInput(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<ChangePasswordInput> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int CURRENTPASSWORD_FIELD_NUMBER = 1;
  private java.lang.Object currentPassword_;
  /**
   * <code>required string currentPassword = 1;</code>
   *
   * <pre>
   *&#47; User's current password
   * </pre>
   */
  public boolean hasCurrentPassword() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required string currentPassword = 1;</code>
   *
   * <pre>
   *&#47; User's current password
   * </pre>
   */
  public java.lang.String getCurrentPassword() {
    java.lang.Object ref = currentPassword_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        currentPassword_ = s;
      }
      return s;
    }
  }
  /**
   * <code>required string currentPassword = 1;</code>
   *
   * <pre>
   *&#47; User's current password
   * </pre>
   */
  public com.google.protobuf.ByteString
      getCurrentPasswordBytes() {
    java.lang.Object ref = currentPassword_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      currentPassword_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEWPASSWORD_FIELD_NUMBER = 2;
  private java.lang.Object newPassword_;
  /**
   * <code>required string newPassword = 2;</code>
   *
   * <pre>
   *&#47;New password the user would like to use
   * </pre>
   */
  public boolean hasNewPassword() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required string newPassword = 2;</code>
   *
   * <pre>
   *&#47;New password the user would like to use
   * </pre>
   */
  public java.lang.String getNewPassword() {
    java.lang.Object ref = newPassword_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        newPassword_ = s;
      }
      return s;
    }
  }
  /**
   * <code>required string newPassword = 2;</code>
   *
   * <pre>
   *&#47;New password the user would like to use
   * </pre>
   */
  public com.google.protobuf.ByteString
      getNewPasswordBytes() {
    java.lang.Object ref = newPassword_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      newPassword_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private void initFields() {
    currentPassword_ = "";
    newPassword_ = "";
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasCurrentPassword()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasNewPassword()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeBytes(1, getCurrentPasswordBytes());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeBytes(2, getNewPasswordBytes());
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, getCurrentPasswordBytes());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, getNewPasswordBytes());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static com.eze.ezecli.ChangePasswordInput parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.eze.ezecli.ChangePasswordInput parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.eze.ezecli.ChangePasswordInput parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.eze.ezecli.ChangePasswordInput parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.eze.ezecli.ChangePasswordInput parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.eze.ezecli.ChangePasswordInput parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.eze.ezecli.ChangePasswordInput parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.eze.ezecli.ChangePasswordInput parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.eze.ezecli.ChangePasswordInput parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.eze.ezecli.ChangePasswordInput parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(com.eze.ezecli.ChangePasswordInput prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ezecli.ChangePasswordInput}
   *
   * <pre>
   **
   * ChangePasswordInput is a message representing the input for change password API. API is used to change password for the user in session.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ezecli.ChangePasswordInput)
      com.eze.ezecli.ChangePasswordInputOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eze.ezecli.Ezetap.internal_static_ezecli_ChangePasswordInput_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eze.ezecli.Ezetap.internal_static_ezecli_ChangePasswordInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eze.ezecli.ChangePasswordInput.class, com.eze.ezecli.ChangePasswordInput.Builder.class);
    }

    // Construct using com.eze.ezecli.ChangePasswordInput.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      currentPassword_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      newPassword_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.eze.ezecli.Ezetap.internal_static_ezecli_ChangePasswordInput_descriptor;
    }

    public com.eze.ezecli.ChangePasswordInput getDefaultInstanceForType() {
      return com.eze.ezecli.ChangePasswordInput.getDefaultInstance();
    }

    public com.eze.ezecli.ChangePasswordInput build() {
      com.eze.ezecli.ChangePasswordInput result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.eze.ezecli.ChangePasswordInput buildPartial() {
      com.eze.ezecli.ChangePasswordInput result = new com.eze.ezecli.ChangePasswordInput(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.currentPassword_ = currentPassword_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.newPassword_ = newPassword_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.eze.ezecli.ChangePasswordInput) {
        return mergeFrom((com.eze.ezecli.ChangePasswordInput)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.eze.ezecli.ChangePasswordInput other) {
      if (other == com.eze.ezecli.ChangePasswordInput.getDefaultInstance()) return this;
      if (other.hasCurrentPassword()) {
        bitField0_ |= 0x00000001;
        currentPassword_ = other.currentPassword_;
        onChanged();
      }
      if (other.hasNewPassword()) {
        bitField0_ |= 0x00000002;
        newPassword_ = other.newPassword_;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasCurrentPassword()) {
        
        return false;
      }
      if (!hasNewPassword()) {
        
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.eze.ezecli.ChangePasswordInput parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.eze.ezecli.ChangePasswordInput) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object currentPassword_ = "";
    /**
     * <code>required string currentPassword = 1;</code>
     *
     * <pre>
     *&#47; User's current password
     * </pre>
     */
    public boolean hasCurrentPassword() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string currentPassword = 1;</code>
     *
     * <pre>
     *&#47; User's current password
     * </pre>
     */
    public java.lang.String getCurrentPassword() {
      java.lang.Object ref = currentPassword_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          currentPassword_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>required string currentPassword = 1;</code>
     *
     * <pre>
     *&#47; User's current password
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCurrentPasswordBytes() {
      java.lang.Object ref = currentPassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currentPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>required string currentPassword = 1;</code>
     *
     * <pre>
     *&#47; User's current password
     * </pre>
     */
    public Builder setCurrentPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      currentPassword_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required string currentPassword = 1;</code>
     *
     * <pre>
     *&#47; User's current password
     * </pre>
     */
    public Builder clearCurrentPassword() {
      bitField0_ = (bitField0_ & ~0x00000001);
      currentPassword_ = getDefaultInstance().getCurrentPassword();
      onChanged();
      return this;
    }
    /**
     * <code>required string currentPassword = 1;</code>
     *
     * <pre>
     *&#47; User's current password
     * </pre>
     */
    public Builder setCurrentPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      currentPassword_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object newPassword_ = "";
    /**
     * <code>required string newPassword = 2;</code>
     *
     * <pre>
     *&#47;New password the user would like to use
     * </pre>
     */
    public boolean hasNewPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string newPassword = 2;</code>
     *
     * <pre>
     *&#47;New password the user would like to use
     * </pre>
     */
    public java.lang.String getNewPassword() {
      java.lang.Object ref = newPassword_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          newPassword_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>required string newPassword = 2;</code>
     *
     * <pre>
     *&#47;New password the user would like to use
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNewPasswordBytes() {
      java.lang.Object ref = newPassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        newPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>required string newPassword = 2;</code>
     *
     * <pre>
     *&#47;New password the user would like to use
     * </pre>
     */
    public Builder setNewPassword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      newPassword_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required string newPassword = 2;</code>
     *
     * <pre>
     *&#47;New password the user would like to use
     * </pre>
     */
    public Builder clearNewPassword() {
      bitField0_ = (bitField0_ & ~0x00000002);
      newPassword_ = getDefaultInstance().getNewPassword();
      onChanged();
      return this;
    }
    /**
     * <code>required string newPassword = 2;</code>
     *
     * <pre>
     *&#47;New password the user would like to use
     * </pre>
     */
    public Builder setNewPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      newPassword_ = value;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:ezecli.ChangePasswordInput)
  }

  static {
    defaultInstance = new ChangePasswordInput(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:ezecli.ChangePasswordInput)
}

