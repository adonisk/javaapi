// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ezetap.proto

package com.eze.ezecli;

/**
 * Protobuf type {@code ezecli.ApiInput}
 *
 * <pre>
 **
 * ApiInput is a message representing the API input to the ezecli app
 * </pre>
 */
public final class ApiInput extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:ezecli.ApiInput)
    ApiInputOrBuilder {
  // Use ApiInput.newBuilder() to construct.
  private ApiInput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private ApiInput(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final ApiInput defaultInstance;
  public static ApiInput getDefaultInstance() {
    return defaultInstance;
  }

  public ApiInput getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  @SuppressWarnings("unused")
private ApiInput(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();
            com.eze.ezecli.ApiInput.MessageType value = com.eze.ezecli.ApiInput.MessageType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              msgType_ = value;
            }
            break;
          }
          case 18: {
            bitField0_ |= 0x00000002;
            msgData_ = input.readBytes();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.eze.ezecli.Ezetap.internal_static_ezecli_ApiInput_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.eze.ezecli.Ezetap.internal_static_ezecli_ApiInput_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.eze.ezecli.ApiInput.class, com.eze.ezecli.ApiInput.Builder.class);
  }

  public static com.google.protobuf.Parser<ApiInput> PARSER =
      new com.google.protobuf.AbstractParser<ApiInput>() {
    public ApiInput parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ApiInput(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<ApiInput> getParserForType() {
    return PARSER;
  }

  /**
   * Protobuf enum {@code ezecli.ApiInput.MessageType}
   *
   * <pre>
   **
   * MessageType is an enum representing the api type to the ezecli app
   * </pre>
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EXIT = 0;</code>
     *
     * <pre>
     *&#47; Exit from ezecli app
     * </pre>
     */
    EXIT(0, 0),
    /**
     * <code>LOGIN = 1;</code>
     *
     * <pre>
     *&#47; Login to ezecli app
     * </pre>
     */
    LOGIN(1, 1),
    /**
     * <code>TXN = 2;</code>
     *
     * <pre>
     *&#47; Initiate a transaction
     * </pre>
     */
    TXN(2, 2),
    /**
     * <code>PREPARE_DEVICE = 3;</code>
     *
     * <pre>
     *&#47; Prepare the ezetap payment device
     * </pre>
     */
    PREPARE_DEVICE(3, 3),
    /**
     * <code>ATTACH_SIGNATURE = 4;</code>
     *
     * <pre>
     *&#47; Attach signature to an txn done earlier
     * </pre>
     */
    ATTACH_SIGNATURE(4, 4),
    /**
     * <code>TXN_HISTORY = 5;</code>
     *
     * <pre>
     *&#47; History of txns performed by the user
     * </pre>
     */
    TXN_HISTORY(5, 5),
    /**
     * <code>VOID_TXN = 6;</code>
     *
     * <pre>
     *&#47; Void any transation done earlier
     * </pre>
     */
    VOID_TXN(6, 6),
    /**
     * <code>FORWARD_RECEIPT = 7;</code>
     *
     * <pre>
     *&#47; Forward e-receipt to the customer
     * </pre>
     */
    FORWARD_RECEIPT(7, 7),
    /**
     * <code>TXN_STATUS = 8;</code>
     *
     * <pre>
     *&#47; Check the status of a transaction
     * </pre>
     */
    TXN_STATUS(8, 8),
    /**
     * <code>CHANGE_PASSWORD = 9;</code>
     *
     * <pre>
     *&#47; Change user's password
     * </pre>
     */
    CHANGE_PASSWORD(9, 9),
    /**
     * <code>LOGOUT = 10;</code>
     *
     * <pre>
     *&#47; Logout from ezecli app
     * </pre>
     */
    LOGOUT(10, 10),
    /**
     * <code>TXN_DETAILS = 11;</code>
     *
     * <pre>
     *&#47; Fetch details of a transaction
     * </pre>
     */
    TXN_DETAILS(11, 11),
    /**
     * <code>ENABLE_DEBUG = 98;</code>
     *
     * <pre>
     *&#47;Enable debug logging
     * </pre>
     */
    ENABLE_DEBUG(12, 98),
    /**
     * <code>DISABLE_DEBUG = 99;</code>
     *
     * <pre>
     *&#47;Disable debug logging
     * </pre>
     */
    DISABLE_DEBUG(13, 99),
    ;

    /**
     * <code>EXIT = 0;</code>
     *
     * <pre>
     *&#47; Exit from ezecli app
     * </pre>
     */
    public static final int EXIT_VALUE = 0;
    /**
     * <code>LOGIN = 1;</code>
     *
     * <pre>
     *&#47; Login to ezecli app
     * </pre>
     */
    public static final int LOGIN_VALUE = 1;
    /**
     * <code>TXN = 2;</code>
     *
     * <pre>
     *&#47; Initiate a transaction
     * </pre>
     */
    public static final int TXN_VALUE = 2;
    /**
     * <code>PREPARE_DEVICE = 3;</code>
     *
     * <pre>
     *&#47; Prepare the ezetap payment device
     * </pre>
     */
    public static final int PREPARE_DEVICE_VALUE = 3;
    /**
     * <code>ATTACH_SIGNATURE = 4;</code>
     *
     * <pre>
     *&#47; Attach signature to an txn done earlier
     * </pre>
     */
    public static final int ATTACH_SIGNATURE_VALUE = 4;
    /**
     * <code>TXN_HISTORY = 5;</code>
     *
     * <pre>
     *&#47; History of txns performed by the user
     * </pre>
     */
    public static final int TXN_HISTORY_VALUE = 5;
    /**
     * <code>VOID_TXN = 6;</code>
     *
     * <pre>
     *&#47; Void any transation done earlier
     * </pre>
     */
    public static final int VOID_TXN_VALUE = 6;
    /**
     * <code>FORWARD_RECEIPT = 7;</code>
     *
     * <pre>
     *&#47; Forward e-receipt to the customer
     * </pre>
     */
    public static final int FORWARD_RECEIPT_VALUE = 7;
    /**
     * <code>TXN_STATUS = 8;</code>
     *
     * <pre>
     *&#47; Check the status of a transaction
     * </pre>
     */
    public static final int TXN_STATUS_VALUE = 8;
    /**
     * <code>CHANGE_PASSWORD = 9;</code>
     *
     * <pre>
     *&#47; Change user's password
     * </pre>
     */
    public static final int CHANGE_PASSWORD_VALUE = 9;
    /**
     * <code>LOGOUT = 10;</code>
     *
     * <pre>
     *&#47; Logout from ezecli app
     * </pre>
     */
    public static final int LOGOUT_VALUE = 10;
    /**
     * <code>TXN_DETAILS = 11;</code>
     *
     * <pre>
     *&#47; Fetch details of a transaction
     * </pre>
     */
    public static final int TXN_DETAILS_VALUE = 11;
    /**
     * <code>ENABLE_DEBUG = 98;</code>
     *
     * <pre>
     *&#47;Enable debug logging
     * </pre>
     */
    public static final int ENABLE_DEBUG_VALUE = 98;
    /**
     * <code>DISABLE_DEBUG = 99;</code>
     *
     * <pre>
     *&#47;Disable debug logging
     * </pre>
     */
    public static final int DISABLE_DEBUG_VALUE = 99;


    public final int getNumber() { return value; }

    public static MessageType valueOf(int value) {
      switch (value) {
        case 0: return EXIT;
        case 1: return LOGIN;
        case 2: return TXN;
        case 3: return PREPARE_DEVICE;
        case 4: return ATTACH_SIGNATURE;
        case 5: return TXN_HISTORY;
        case 6: return VOID_TXN;
        case 7: return FORWARD_RECEIPT;
        case 8: return TXN_STATUS;
        case 9: return CHANGE_PASSWORD;
        case 10: return LOGOUT;
        case 11: return TXN_DETAILS;
        case 98: return ENABLE_DEBUG;
        case 99: return DISABLE_DEBUG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.eze.ezecli.ApiInput.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ezecli.ApiInput.MessageType)
  }

  private int bitField0_;
  public static final int MSGTYPE_FIELD_NUMBER = 1;
  private com.eze.ezecli.ApiInput.MessageType msgType_;
  /**
   * <code>required .ezecli.ApiInput.MessageType msgType = 1;</code>
   *
   * <pre>
   *&#47; type of API
   * </pre>
   */
  public boolean hasMsgType() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .ezecli.ApiInput.MessageType msgType = 1;</code>
   *
   * <pre>
   *&#47; type of API
   * </pre>
   */
  public com.eze.ezecli.ApiInput.MessageType getMsgType() {
    return msgType_;
  }

  public static final int MSGDATA_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString msgData_;
  /**
   * <code>optional bytes msgData = 2;</code>
   *
   * <pre>
   *&#47; packed data of input message of the API; For Logout, PrepareDevice and Exit APIs there are no corresponding input messages and hence this field should be initialized to NULL
   * </pre>
   */
  public boolean hasMsgData() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional bytes msgData = 2;</code>
   *
   * <pre>
   *&#47; packed data of input message of the API; For Logout, PrepareDevice and Exit APIs there are no corresponding input messages and hence this field should be initialized to NULL
   * </pre>
   */
  public com.google.protobuf.ByteString getMsgData() {
    return msgData_;
  }

  private void initFields() {
    msgType_ = com.eze.ezecli.ApiInput.MessageType.EXIT;
    msgData_ = com.google.protobuf.ByteString.EMPTY;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasMsgType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeEnum(1, msgType_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeBytes(2, msgData_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, msgType_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, msgData_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static com.eze.ezecli.ApiInput parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.eze.ezecli.ApiInput parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.eze.ezecli.ApiInput parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.eze.ezecli.ApiInput parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.eze.ezecli.ApiInput parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.eze.ezecli.ApiInput parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.eze.ezecli.ApiInput parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.eze.ezecli.ApiInput parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.eze.ezecli.ApiInput parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.eze.ezecli.ApiInput parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(com.eze.ezecli.ApiInput prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ezecli.ApiInput}
   *
   * <pre>
   **
   * ApiInput is a message representing the API input to the ezecli app
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ezecli.ApiInput)
      com.eze.ezecli.ApiInputOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.eze.ezecli.Ezetap.internal_static_ezecli_ApiInput_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.eze.ezecli.Ezetap.internal_static_ezecli_ApiInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.eze.ezecli.ApiInput.class, com.eze.ezecli.ApiInput.Builder.class);
    }

    // Construct using com.eze.ezecli.ApiInput.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      msgType_ = com.eze.ezecli.ApiInput.MessageType.EXIT;
      bitField0_ = (bitField0_ & ~0x00000001);
      msgData_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.eze.ezecli.Ezetap.internal_static_ezecli_ApiInput_descriptor;
    }

    public com.eze.ezecli.ApiInput getDefaultInstanceForType() {
      return com.eze.ezecli.ApiInput.getDefaultInstance();
    }

    public com.eze.ezecli.ApiInput build() {
      com.eze.ezecli.ApiInput result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.eze.ezecli.ApiInput buildPartial() {
      com.eze.ezecli.ApiInput result = new com.eze.ezecli.ApiInput(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.msgType_ = msgType_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.msgData_ = msgData_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.eze.ezecli.ApiInput) {
        return mergeFrom((com.eze.ezecli.ApiInput)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.eze.ezecli.ApiInput other) {
      if (other == com.eze.ezecli.ApiInput.getDefaultInstance()) return this;
      if (other.hasMsgType()) {
        setMsgType(other.getMsgType());
      }
      if (other.hasMsgData()) {
        setMsgData(other.getMsgData());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasMsgType()) {
        
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.eze.ezecli.ApiInput parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.eze.ezecli.ApiInput) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.eze.ezecli.ApiInput.MessageType msgType_ = com.eze.ezecli.ApiInput.MessageType.EXIT;
    /**
     * <code>required .ezecli.ApiInput.MessageType msgType = 1;</code>
     *
     * <pre>
     *&#47; type of API
     * </pre>
     */
    public boolean hasMsgType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ezecli.ApiInput.MessageType msgType = 1;</code>
     *
     * <pre>
     *&#47; type of API
     * </pre>
     */
    public com.eze.ezecli.ApiInput.MessageType getMsgType() {
      return msgType_;
    }
    /**
     * <code>required .ezecli.ApiInput.MessageType msgType = 1;</code>
     *
     * <pre>
     *&#47; type of API
     * </pre>
     */
    public Builder setMsgType(com.eze.ezecli.ApiInput.MessageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      msgType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required .ezecli.ApiInput.MessageType msgType = 1;</code>
     *
     * <pre>
     *&#47; type of API
     * </pre>
     */
    public Builder clearMsgType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      msgType_ = com.eze.ezecli.ApiInput.MessageType.EXIT;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString msgData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes msgData = 2;</code>
     *
     * <pre>
     *&#47; packed data of input message of the API; For Logout, PrepareDevice and Exit APIs there are no corresponding input messages and hence this field should be initialized to NULL
     * </pre>
     */
    public boolean hasMsgData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes msgData = 2;</code>
     *
     * <pre>
     *&#47; packed data of input message of the API; For Logout, PrepareDevice and Exit APIs there are no corresponding input messages and hence this field should be initialized to NULL
     * </pre>
     */
    public com.google.protobuf.ByteString getMsgData() {
      return msgData_;
    }
    /**
     * <code>optional bytes msgData = 2;</code>
     *
     * <pre>
     *&#47; packed data of input message of the API; For Logout, PrepareDevice and Exit APIs there are no corresponding input messages and hence this field should be initialized to NULL
     * </pre>
     */
    public Builder setMsgData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      msgData_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes msgData = 2;</code>
     *
     * <pre>
     *&#47; packed data of input message of the API; For Logout, PrepareDevice and Exit APIs there are no corresponding input messages and hence this field should be initialized to NULL
     * </pre>
     */
    public Builder clearMsgData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      msgData_ = getDefaultInstance().getMsgData();
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:ezecli.ApiInput)
  }

  static {
    defaultInstance = new ApiInput(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:ezecli.ApiInput)
}

